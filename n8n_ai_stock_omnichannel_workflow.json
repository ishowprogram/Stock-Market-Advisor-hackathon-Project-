{
  "name": "Stock Market Assistant Chat Bot",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/stock-chat",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "stock-chat-webhook"
    },
    {
      "parameters": {
        "functionCode": "const text = $json[\"message\"] || \"\";\nconst sensitive = [];\n\n// Regex patterns\nconst patterns = {\n  email: /\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b/i,\n  phone: /\\+?\\d{10,15}/,\n  password: /(password|pwd|pass)\\s*[:=]?\\s*\\S+/i,\n  handle: /@[A-Za-z0-9_]+/,\n  card: /\\b\\d{12,16}\\b/,\n  upi: /\\b[\\w.-]+@upi\\b/i,\n  address: /(street|road|apartment|block|colony)/i\n};\n\n// Check each pattern\nfor (const [type, regex] of Object.entries(patterns)) {\n  const match = text.match(regex);\n  if (match) {\n    sensitive.push({ type, value: match[0] });\n  }\n}\n\nreturn [{ \n  message: text, \n  sensitive: sensitive.length > 0 ? sensitive : null \n}];"
      },
      "id": "detect-sensitive-info",
      "name": "Detect Sensitive Info",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{$json[\"sensitive\"]}}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-sensitive",
      "name": "Check if Sensitive Info Found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "YOUR_SHEET_ID",
          "mode": "list",
          "cachedResultName": "Sensitive Info Log"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1"
        },
        "columnToMatchOn": "A",
        "valueInputMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "A",
              "value": "={{$now}}"
            },
            {
              "column": "B", 
              "value": "={{$json[\"sensitive\"][0].type}}"
            },
            {
              "column": "C",
              "value": "={{$json[\"sensitive\"][0].value}}"
            },
            {
              "column": "D",
              "value": "={{$json[\"message\"]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "log-to-sheets",
      "name": "Log to Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [900, 200],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "YOUR_GOOGLE_CREDENTIALS_ID",
          "name": "Google Sheets Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://www.alphavantage.co/query",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "function",
              "value": "TIME_SERIES_INTRADAY"
            },
            {
              "name": "symbol", 
              "value": "MSFT"
            },
            {
              "name": "interval",
              "value": "5min"
            },
            {
              "name": "apikey",
              "value": "YOUR_ALPHA_VANTAGE_API_KEY"
            }
          ]
        },
        "options": {}
      },
      "id": "fetch-stock-data",
      "name": "Fetch Stock Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create",
        "model": {
          "__rl": true,
          "value": "gpt-3.5-turbo",
          "mode": "list"
        },
        "messages": {
          "values": [
            {
              "role": "user",
              "content": "User asked: {{$node[\"Detect Sensitive Info\"].json[\"message\"]}}\n\nStock Data: {{$json}}\n\nGive a clear Buy/Hold/Sell suggestion in simple words based on the stock data and user query."
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 150
        }
      },
      "id": "openai-analysis",
      "name": "OpenAI Stock Analysis",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [1120, 400],
      "credentials": {
        "openAiApi": {
          "id": "YOUR_OPENAI_CREDENTIALS_ID",
          "name": "OpenAI Account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"reply\": \"{{$json['choices'][0]['message']['content']}}\",\n  \"sensitive_detected\": {{$node[\"Detect Sensitive Info\"].json[\"sensitive\"] !== null}}\n}",
        "options": {}
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 400]
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Detect Sensitive Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Detect Sensitive Info": {
      "main": [
        [
          {
            "node": "Check if Sensitive Info Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Sensitive Info Found": {
      "main": [
        [
          {
            "node": "Log to Google Sheets",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch Stock Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fetch Stock Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log to Google Sheets": {
      "main": [
        []
      ]
    },
    "Fetch Stock Data": {
      "main": [
        [
          {
            "node": "OpenAI Stock Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Stock Analysis": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "stock-chat-workflow-001"
  },
  "id": "stock-chat-workflow",
  "tags": [
    {
      "createdAt": "2025-01-08T00:00:00.000Z",
      "updatedAt": "2025-01-08T00:00:00.000Z",
      "id": "1",
      "name": "stock-analysis"
    },
    {
      "createdAt": "2025-01-08T00:00:00.000Z", 
      "updatedAt": "2025-01-08T00:00:00.000Z",
      "id": "2",
      "name": "sensitive-data"
    }
  ]
}